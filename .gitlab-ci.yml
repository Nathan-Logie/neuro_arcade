# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


image: python:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - serverFix
  - test

variables:
  PYTHON_VERSION: "3.11.5"
  MYSQL_DATABASE: $MYSQL_DB
  MYSQL_ROOT_PASSWORD: $MYSQL_PASS
  MYSQL_USER: $MYSQL_USER
  MYSQL_PASSWORD: $MYSQL_PASS

before_script:
  # - apt-get install -y python 3.11.5
  # - update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11.5
  - python -m venv venv
  - source venv/bin/activate
  - pip install -r requirements.txt


build-job:       # This job runs in the build stage, which runs first. It sets up the virtual environment in order to run the tests
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

server-job:
  stage: serverFix
  script:
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py check


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - python3 manage.py test
    - echo "Code coverage is 90%"
  only:
    - branches
  except:
    - main

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

